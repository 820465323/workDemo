<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	">
	
	<!--1 创建数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="hr"></property>
		<property name="password" value="666669"></property>
	</bean>
	
	<!-- 2 创建SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引入依赖的数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 指定mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:/com/baizhi/dao/*Mapper.xml"></property>
	</bean>
	
	<!-- 3 配置创建dao实现类的对象 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 引入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!-- 指定接口所在的包 
			Spring工厂创建出来的DAO实现类对象，默认的beanId 是接口类名的首字母小写
				比如： UserDao  ==>  userDao
				OrderDao  ==>  orderDao
		-->
		<property name="basePackage" value="com.baizhi.dao"></property>
	</bean>
	
	<!-- 创建service对象 -->
	<bean id="CarsService" class="com.baizhi.service.CarsService" autowire="byName"></bean>
</beans>